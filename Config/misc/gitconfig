[include]
  path = ~/.gitconfig.github
[user]
  name = Ryan Davis
  email = ryand-ruby@zenspider.com
[core]
  editor       = /MyApplications/Emacs.app/Contents/MacOS/Emacs
  excludesfile = /Users/ryan/.gitignore_global
  quotepath    = false
[alias]
  st        = status -uno
  sta       = status
  down      = pull --rebase
  onup      = push
  up        = push
  rollback  = reset HEAD^
  l         = log --abbrev-commit --pretty=oneline
  loggrep   = log -S
  skinny    = !"git gc; git repack -Ad; git gc; git prune; git prune-packed"
  new-pr    = !"hub pull-request --no-edit -o"
  topic     = checkout -t -b
  sha       = rev-parse --short
  prune     = remote update --prune
  sweep     = !git branch -r --merged | grep -v master | sed \"s/origin\\///\" | xargs -n 1 echo git push --delete origin
  s         = status -sb
  name      = !"git symbolic-ref HEAD | cut -f3- -d/"
  run       = !"git rev-list --reverse --abbrev-commit master | while read -r SHA ; do git checkout --quiet $SHA; echo SHA=$SHA; "$@"; done; git checkout --quiet master; true"
  runv      = !"git rev-list --reverse --abbrev-commit master | while read -r SHA ; do git checkout --quiet $SHA; echo ===; git show -s --oneline $SHA; echo; $@; echo; done; git checkout --quiet master; true"
  churn     = !"git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count\tfile"} {print $1 "\t" $2}' | sort -g"
  unrebase  = reset --hard ORIG_HEAD
  unpull    = reset --hard HEAD@{1}

# remove locals that have already been pruned remotely
# git remote update --prune
# prune remote merged
# $ git checkout master && git branch -r --merged | grep -v master | sed -e 's/origin\//:/' | xargs git push origin
# prune local merged
# $ git checkout master && git branch --merged | grep -v master | xargs git branch -d

# another possibility:
# git remote update --prune
# git fetch --all --prune
# git pull --all

[push]
  default = matching
[diff]
  compactionHeuristic = true
[merge]
  keepBackup = false;
  summary = true
  tool = p4merge
[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepBackup      = false
  trustExitCode   = false
  keepTemporaries = false
[credential]
  helper = osxkeychain
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[branch]
	autosetupmerge = true
	autosetuprebase = always
[fetch]
	recurseSubmodules = true
[pull]
	rebase = true
[absorb]
        maxStack=20
[gc]
	auto = 256
[remind]
	paths = /Users/ryan/Work/git/zenspider/*,/Users/ryan/Work/seattlerb/*,/Users/ryan/Work/searbsg/*,/Users/ryan/Work/git/chef/*,/Users/ryan/Work/git/inspec/*
