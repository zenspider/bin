#!/usr/bin/perl -w

use strict;
use Mail::Audit;
use Time::JulianDay;
use Getopt::Long;

my %option;
GetOptions(\%option,
	   "conf=s",
	   "check",
	  );

#
# My Mail Policies:
#
# 0) Until trust for this gets built up, we will be saving EVERYTHING 
#    to a single file and logging what we WOULD have done.
# 1) Go through my general filter list, deal w/ matches as directed.
#    this will deal w/ know email addresses, email lists, etc.
#
#    All that should be left is:
#      + real spam
#      + suspect spam
#      + addresses I need to add to my list
#
# 2) If the mail fails rblcheck, it is real spam and goes to BlackBox
# 3) All other mail goes to GrayBox
#

my $mail = '/home/ryand/Mail/spool';
open LOG, ">>/home/ryand/.mailfilter.log"
  || die "Couldn't open mailfilter.log: $!";

# Get all of our standard fields of interest.
my ($item, $from, $to, $cc, $subject);
unless ($option{check}) {
  $item = Mail::Audit->new();
  $from = $item->from();
  $to = $item->to();
  $cc = $item->cc();
  $subject = $item->subject();
  chomp($from, $to, $cc, $subject);
  study $from;
}

# general filter
my $isodate_re = '\d{4}-\d{2}-\d{2}';
my $field_re = 'SUBJECT|FROM|TO|CC';
while (<DATA>) {

  # the usual whitespace cleanup
  chomp;
  s/^\s+//;
  s/\s+$//;

  # ignore comment lines
  next if m/^\#/;
  next if m/^$/;

  my ($action, $file, $isodate, $field, $regex, $msg);

  if (m/^ACCEPT\s+(\S+)(?:\s+($isodate_re))?\s+($field_re)\s+(.+)/o) {
    $file = $1;
    $isodate = $2 || '';
    $field = lc($3);
    $regex = $4;
    $msg = '';
  } elsif (m/^IGNORE\s+(?:\s+($isodate_re)\s+)?($field_re)\s+(.+)/o) {
    $file = 'BlackBox';
    $isodate = $1 || '';
    $field = lc($2);
    $regex = $3;
    $msg = "Ignoring";
  } else {
    &log("ERROR: syntax error: '$_'");
    exit(1);
  }
  
  if ($isodate) {
    $isodate =~ /(\d\d\d\d)-(\d\d)-(\d\d)/;
    my $then = julian_day($1, $2, $3);
    my $now  = local_julian_day(time);

    if ($then < $now) {
      &log("Skipping $field/$regex/$isodate ($then < $now)");
      next;
    }
  }

  unless ($option{check}) {
    my $cmd = "&save(\$file, \$msg) if \$$field =~ $regex";
    eval $cmd;
    if ($@) {
      &log("ERROR w/ '$cmd': $@");
    }
  }
}

unless ($option{check}) {
  my $rbl = $item->rblcheck(5);
  if ($rbl) {
    &save("BlackBox", "SPAM: '$rbl'");
  } else {
    &save("GrayBox");
  }
}

sub save {
  my $box = shift;
  my $msg = shift || '';

  &log("Saving in '$box'" . ($msg ? ": $msg" : ''));
  $item->accept("$mail/$box");
}

sub log {
  my $msg = join('', @_);

  unless ($option{check}) {
    print LOG "$from: $subject: $msg\n";
  } else {
    print "$msg\n";
  }
}

__DATA__
# FORMAT:
# ACCEPT FILE [ISODATE] FIELD REGEX
# IGNORE      [ISODATE] FIELD REGEX
#
# FILE    = some/path (already in mail folder)
# ISODATE = YYYY-MM-DD
# FIELD   = (SUBJECT|FROM|TO|CC)
# REGEX   = any perl regex
#
# EXAMPLES:
#
# Ignores any mail whose subject has "Alec Guiness" in it until 2000-09-01
# IGNORE 2000-09-01 SUBJECT m/Alec Guiness/
#
# Accepts mail from "fred@domain.com" into "Personal/Fred"
# ACCEPT Personal/Fred FROM m/fred@domain.com/
#

#CMD   FILE          ISODATE    FIELD   REGEX

############################################################
# Ignore:

# if the TO/SUBJECT field is to one of several bulk spammers, ignore.

IGNORE                          SUBJECT m/Subject: Obidos Error Report/i

IGNORE				FROM	m/root\@/i
IGNORE				SUBJECT m/CRON:|Cron/i

############################################################
# Accept:

ACCEPT commit-main		SUBJECT m/Subject:.*P4 SUBMIT by .* \(mainline\)/i
ACCEPT commit			SUBJECT m/commit|checkin|publish|submit/i
ACCEPT build			TO	m/(performance-interest|build-info|houston)\@/i
ACCEPT build			FROM	m/build\@/i
ACCEPT frank			SUBJECT m/frank/i
ACCEPT frank			TO	m/frank-users/i
ACCEPT downtown			TO	m/(downtown|pac|pac-amzn-sal|amazon|seattle|seattle-reg|pac|pacmed|infrastructure)\@/i
ACCEPT software			TO	m/(software|pubsub-users|ute|perlhacker|infrastructure|codeline-owners)\@/i
ACCEPT qa			TO	m/qa-tools\@/i
ACCEPT antlr			TO	m/antlr-interest\@/i

# Accept mail from or to me

ACCEPT INBOX			FROM    m/(zss|ryand|root)\@\.*(amazon|zenspider)\.com/i

# Everything else is rejected by default

