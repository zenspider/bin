#!/bin/sh
# the next line restarts using wish \
    exec wish "$0" "$@"
  
set delay 5000
set title "Output:"
set message "No Output"
set cmd "echo error parsing command line."

proc todo {} {

    global delay
    runCmd
    after $delay todo
}

proc runCmd {} {
    global cmd
    
    set ec [ catch { eval exec $cmd } data ]
    if { $ec == 0 } {
	global output
	global message
	if { $data != "" } {
	    set output $data
	} else {
	    set output $message
	}
	.x.output configure -foreground #000
    } else {
	global output
	set output "Error: $ec for $cmd"
	.x.output configure -foreground #f00
    }
}

proc initialize {} {

    global argv
    global title
    global delay
    global message
    global cmd

    set state flag
    set max [llength $argv]
    set i 0
    foreach arg $argv {
	switch -- $state {
	    flag {
		switch -glob -- $arg {
		    -delay*	{ set state delay }
		    -msg*	{ set state message }
		    -message*	{ set state message }
		    -title*	{ set state title }
		    default	{
			set cmd [lrange $argv $i end]
			set state done
		    }
		}
	    }
	    delay {
		set delay $arg
		set state flag
	    }
	    message {
		set message $arg
		set state flag
	    }
	    title {
		set title $arg
		set state flag
	    }
	    done {
		break
	    }
	}
	incr i 1
    }
    
    wm title . "tkmon 1.0"
    frame .x
    label .x.title -text $title
    pack  .x.title -side top
    
    global output
    set output $message
    #-font {-family Courier -weight normal} 
    label .x.output -justify left -textvariable output
    pack .x.output -side top -side left -anchor e
    
    pack  .x -side left
}

initialize
after 1000 todo

bind . <Control-c> { exit }
bind . <ButtonPress-1> { 
    bell
    runCmd
}

wm protocol . WM_DELETE_WINDOW { exit }
