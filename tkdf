#!/bin/wish -f
wm title . "tkdf 2.0"

#MODIFY# dfcmd should be the executable to your systems df command.
set dfcmd "df"

#MODIFY# dfflg should be the arguments required for a posix'y output.
set dfflg "-k"

#MODIFY# disks should be the set of directorys you want to monitor.
#MODIFY# number following disk name is the minimum space in k before
#MODIFY# being warned. Warning is in the form of a red percentage.
set disks {
	{/ 500000} {/disk2 250000}
}

# Filesystem	kbytes	used	avail	capacity%	Mounted on
# 7		8	9	10	11		12

set colNames {
    "" "" "" "" "" "" ""
    "FS"
    "Total"
    "Used"
    "Avail"
    "U%"
    "Disk"
}

set showme {12 10 9 11 8}

proc kmg {free} {
	if { [ string compare $free ??? ] } {
		set digits [ string length $free ]
		set meg [ expr $free/1024 ]
		set gig [ expr $meg/1024 ]
		if { $gig >= 10 } {
			set result ${gig}G
		} elseif { $meg >= 10 } {
			set result ${meg}M
		} else {
			set result ${free}K
		}
	} else {
		set result ${free}
	}
}

proc todo {} {
    global disks
    global showme

    foreach dd $disks {
	set d [ lindex $dd 0 ]
	set min($d) [ lindex $dd 1 ]
	
	global dfcmd
	global dfflg
	
	set ec [ catch { exec $dfcmd $dfflg $d } data ]
	if { $ec == 0 } {
	    foreach col $showme {
		global g$col$d
		if { (8 <= $col) && ($col <= 10) } {
		    set g$col$d [ kmg [ lindex $data $col ] ]
		} else {
		    set g$col$d [ lindex $data $col ]
		}
		if {[ lindex $data 10 ] < $min($d)} {
		    .$col.$d configure -foreground #f00
		} else {
		    .$col.$d configure -foreground #000
		}
	    }
	}
    }
    after 5000 todo
}

proc initialize {} {

    global disks
    global showme

    foreach col $showme {
	global colNames
	frame .$col
	label .$col.title -text [lindex $colNames $col]
	pack  .$col.title -side top

	foreach dd $disks {
	    set d [ lindex $dd 0 ]

	    global g$col$d
	    set g$col$d "???"
	    label .$col.$d -textvariable g$col$d
	    pack .$col.$d -side top -anchor e
	}

	pack  .$col -side left
    }
}

initialize
after 1000 todo

bind . <Control-c> { exit }

wm protocol . WM_DELETE_WINDOW { exit }
