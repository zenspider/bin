#!/usr/local/bin/ruby -ws

$n ||= false
$b ||= false
$o ||= false
$p ||= false
$h ||= false
$s ||= false

if $h then
  puts "#{File.basename($0)} [options] [files]"
  puts "  -b - strip leading and trailing whitespace, and blanks"
  puts "  -n - convert numbers to '<num>'"
  puts "  -o - skip lines that only occur once"
  puts "  -p - add percentage values to the output"
  puts "  -s - sort by line, rather than occurance"
  puts "  -h - show help"
  exit 0
end

c = {}
c.default = 0
total = 0

ARGF.each do |$_|
  chomp

  # regex is split this way so you get all dots or dashes, not a mix
  gsub!(/(\d+((\.\d+)*|(\-\d+)*))/) do |match|
    if match.split(/[\.-]/).size >= 4 then # IP number
      match
    else
      "<num>"
    end
  end if $n

  gsub!(/\s{2,}/, ' ')

  if $b then
    $_.strip!
    next if $_.empty?
  end
  
  c[$_] += 1
  total += 1
end rescue nil # silence broken pipe errors

if $s then
  sorted = c.keys.sort
else
  sorted = c.keys.sort { |a,b| c[b] <=> c[a] }
end

total = total.to_f

sorted.each do |key|
  next if $o and c[key] == 1
  if $p then
    printf "%5d:%5.2f%%:%s\n", c[key], c[key] / total * 100.0, key
  else
    printf "%5d: %s\n", c[key], key
  end
end rescue nil # silence broken pipe errors
