#!/usr/bin/env -S ruby -ws

$y ||= false # yes, do it

require "json"
require "open-uri"
require "fileutils"

def zig2json zig
  lines = zig.lines.map(&:chomp)
  stack = []
  current = nil

  lines.size.times do |idx|
    line = lines[idx]

    if line =~ /\.\{[^\}]?$/ then
      if lines[idx+1] =~ /^\s*\..*?=/ then
        current = {}
      else
        current = []
      end
      stack << current
    end

    # manage pushing and popping from stack:
    case line
    when /^(\s*)\.(.*?) = \.\{$/ then                     # OPEN
      ws, key = $1, $2
      lines[idx] = "%s%p : %s" % [ws, key, current.inspect[0]]
    when /^\.\{$/ then                                    # OPEN BARE
      lines[idx] = line.sub(/\.\{/, current.inspect[0])
    when /^(\s*)\.(.*?) = \"(.*?)\",$/
      ws, key, val = $1, $2, $3
      lines[idx] = "%s%p : %p," % [ws, key, val]
    when /^(\s*)\.(.*?) = \.\{\},$/
      ws, key, val = $1, $2, {}
      lines[idx] = "%s%p : %p," % [ws, key, val]
    when /^\s*\},?$/ then                                 # CLOSE
      lines[idx-1] = lines[idx-1].chomp "," if lines[idx-1].end_with? ","
      lines[idx] = line.sub(/\}/, current.inspect[-1])

      stack.pop
      current = stack.last
    end
  end

  lines.join "\n"
end

DIR="/usr/local/opt/zig"

if ARGV.delete "--clean" then
  puts "...from clean"
  # FileUtils.rm_rf DIR
  puts "(not yet)"
end

has_zig = system("which zig")

unless has_zig then
  warn "zig not installed... fudging it"
  abort "not yet"
end

current_version = `zig version`.chomp

url = "https://ziglang.org/download/index.json"

data = JSON.parse URI.parse(url).read

data.each do |k,v|
  data[k][:version] = k
end

requested_version = ARGV.shift || data.keys[1] # first stable version

requested = data[requested_version] || data[data.keys.grep(Regexp.new requested_version).first]

unless requested then
  warn "Not found: %p" % [requested_version]
  warn "Versions: #{data.keys.join ", "}"
  exit 1
end

if requested[:version] == current_version then
  warn "You are up to date, running #{current_version}"
  warn "You might want to run with 'master' to get latest development version"
  warn "Versions: #{data.keys.join ", "}"
  exit 0
end

targets  = JSON.parse(zig2json `zig targets`)["native"]
platform = "%s-%s" % [targets["cpu"]["arch"], targets["os"]] # => "aarch64-macos"
url      = requested[platform]["tarball"]

puts "Current = %s" % [current_version]
puts "Downloading zig %s for %s" % [requested_version, platform]

exit 0 unless $y

FileUtils.mkdir_p DIR

puts "  from %s" % [url]

system "curl -s #{url} | tar -xC #{DIR} --hfsCompression --strip-components 1"

FileUtils.ln_sf "../opt/zig/zig", "/usr/local/bin/zig"

system "zig version"
